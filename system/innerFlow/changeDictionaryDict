/*--------------------------------*- C++ -*----------------------------------*\
| =========                 |                                                 |
| \\      /  F ield         | OpenFOAM: The Open Source CFD Toolbox           |
|  \\    /   O peration     | Version:  v2212                                 |
|   \\  /    A nd           | Website:  www.openfoam.com                      |
|    \\/     M anipulation  |                                                 |
\*---------------------------------------------------------------------------*/
FoamFile
{
    version     2.0;
    format      ascii;
    class       dictionary;
    object      changeDictionaryDict;
}
// * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * //

U
{
    internalField   uniform (0.1 0 0);

    boundaryField
    {
        fInnerFlow-htSurface1
        {
            type            noSlip;
        }
        "procBoundary.*"
        {
            type            processor;
        }
        fInp1
        {
            type            flowRateInletVelocity;
            massFlowRate    0.002;
            value           (0 0 0);
        }
        fInp2
        {
            type            calculated;
        }
    }
}

T
{
    internalField   uniform 300;

    boundaryField
    {
        fInnerFlow-htSurface1
        {
            type            cyclic;
        }
        "procBoundary.*"
        {
            type            processor;
        }

        fInp1
        {
            type            fixedValue;
            value           uniform 300;
        }
        fInp2
        {
            type            inletOutlet;
            inletValue      uniform 300;
            value           uniform 300;
        }
    }
}

omega
{
    internalField   uniform 2;

    boundaryField
    {
        fInnerFlow-htSurface1
        {
            type            omegaWallFunction;
            value           $internalField;
        }
        "procBoundary.*"
        {
            type            processor;
        }

        fInp1
        {
            type            fixedValue;
            value           $internalField;
        }
        fInp2
        {
            type            fixedValue;
            value           $internalField;
        }
    }
}

k
{
    internalField   uniform 0.00015;

    boundaryField
    {
        fInnerFlow-htSurface1
        {
            type            kqRWallFunction;
            value           $internalField;
        }
        "procBoundary.*"
        {
            type            processor;
        }

        fInp1
        {
            type            fixedValue;
            value           $internalField;
        }
        fInp2
        {
            type            fixedValue;
            Value           $internalField;
        }
    }
}

p_rgh
{
    internalField   uniform 3e7;

    boundaryField
    {
        fInnerFlow-htSurface1
        {
            type            calculated;
        }
        "procBoundary.*"
        {
            type            processor;
        }

        fInp1
        {
            type            calculated;
        }
        fInp2
        {
            type            fixedValue;
            value           uniform 3e7;
        }
    }
}

p
{
    internalField   uniform 3e7;

    boundaryField
    {
        fInnerFlow-htSurface1
        {
            type            calculated;
            value           uniform 3e7;
        }
        "procBoundary.*"
        {
            type            processor;
        }

        fInp1
        {
            type            calculated;
            value           uniform 3e7;
        }
        fInp2
        {
            type            calculated;
            value           eniform 3e7;
        }
    }
}
nut
{
    internalField   uniform 5e-7;
    boundaryField
    {
        fInnerFlow-htSurface1
        {
            type            nutkRoughWallFunction;
            Ks              uniform 250e-9;
            Cs              0.5;
        }
        "procBoundary.*"
        {
            type    processor;
        }

        fInp1
        {
            type    zeroGradient;
        }

        fInp2
        {
            type    zeroGradient;
        }
    }
}


// ************************************************************************* //
